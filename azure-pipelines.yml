jobs:
- job: build
  pool:
    vmImage: 'ubuntu-latest'
  timeoutInMinutes: 360
  strategy:
    matrix:
      cos7_x86_64_1:
        DISTARCH: 'centos7-x86_64'
        PTOP: '1:4'
      cos7_x86_64_2:
        DISTARCH: 'centos7-x86_64'
        PTOP: '2:4'
      cos7_x86_64_3:
        DISTARCH: 'centos7-x86_64'
        PTOP: '3:4'
      cos7_x86_64_4:
        DISTARCH: 'centos7-x86_64'
        PTOP: '4:4'
      cos7_aarch64_1:
        DISTARCH: 'centos7-aarch64'
        PTOP: '1:4'
      cos7_aarch64_2:
        DISTARCH: 'centos7-aarch64'
        PTOP: '2:4'
      cos7_aarch64_3:
        DISTARCH: 'centos7-aarch64'
        PTOP: '3:4'
      cos7_aarch64_4:
        DISTARCH: 'centos7-aarch64'
        PTOP: '4:4'
      cos7_ppc64le_1:
        DISTARCH: 'centos7-ppc64le'
        PTOP: '1:4'
      cos7_ppc64le_2:
        DISTARCH: 'centos7-ppc64le'
        PTOP: '2:4'
      cos7_ppc64le_3:
        DISTARCH: 'centos7-ppc64le'
        PTOP: '3:4'
      cos7_ppc64le_4:
        DISTARCH: 'centos7-ppc64le'
        PTOP: '4:4'
      alma8_x86_64:
        DISTARCH: 'alma8-x86_64'
        PTOP: '1:1'
      alma8_aarch64:
        DISTARCH: 'alma8-aarch64'
        PTOP: '1:1'
      alma8_ppc64le:
        DISTARCH: 'alma8-ppc64le'
        PTOP: '1:1'
      alma9_x86_64:
        DISTARCH: 'alma9-x86_64'
        PTOP: '1:1'
      alma9_aarch64:
        DISTARCH: 'alma9-aarch64'
        PTOP: '1:1'
      alma9_ppc64le:
        DISTARCH: 'alma9-ppc64le'
        PTOP: '1:1'
    maxParallel: 0

  steps:

  - checkout: self
    clean: true
    condition: or(and(ne(variables['SYSTEM.PULLREQUEST.ISFORK'], 'true'), eq(variables['Build.Reason'], 'PullRequest')), and(eq(variables['SYSTEM.PULLREQUEST.ISFORK'], 'true'), eq(variables['Build.SourceBranchName'], 'main')))

  - script: |
         sudo mkdir -p /opt/empty_dir || true
         for d in \
                  /opt/ghc \
                  /opt/hostedtoolcache \
                  /usr/lib/jvm \
                  /usr/local/.ghcup \
                  /usr/local/lib/android \
                  /usr/local/share/powershell \
                  /usr/share/dotnet \
                  /usr/share/swift \
                  ; do
           sudo rsync --stats -a --delete /opt/empty_dir/ $d || true
         done
         sudo apt-get purge -y -f firefox \
                                  google-chrome-stable \
                                  microsoft-edge-stable
         sudo apt-get autoremove -y >& /dev/null
         sudo apt-get autoclean -y >& /dev/null
         df -h
    displayName: Manage disk space
    condition: 'false'

  - script: |
         sudo fallocate -l 15GiB /swapfile || true
         sudo chmod 600 /swapfile || true
         sudo mkswap /swapfile || true
         sudo swapon /swapfile || true
    displayName: Create swap file
    condition: or(eq(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.SourceBranchName'], 'main'))

  - bash: |
        sudo apt-get remove -y --auto-remove gcc
        sudo apt-get purge -y --auto-remove gcc
        sed -h
        echo `uname -s`
    displayName: removing system compilers
    condition: 'false'

  - bash: .ci_scripts/install_miniconda.sh
    displayName: install miniconda
    condition: 'false'

  - bash: |
        set -e

        source $HOME/miniforge3/etc/profile.d/conda.sh
        conda activate base
        cat .ci_scripts/condarc > $HOME/.condarc

        mkdir -p build_logs

        echo "cmd args: ${DISTARCH} ${PTOP}"
        python build_cdt_recipes.py ${DISTARCH} --part-to-process=${PTOP}
    displayName: build and upload CDTs
    env:
      ANACONDA_TOKEN: $(anaconda.token)
      IS_FORK: $(System.PullRequest.IsFork)
    condition: 'false'

  - publish: build_logs/
    artifact: build-logs-$(DISTARCH)-azurejob$(system.JobId)
    condition: 'false'
