package:
  name: libsoup-conda-ppc64le
  version: 2.62.2

source:
  - url: https://vault.centos.org/altarch/7.9.2009/os/ppc64le/Packages/libsoup-2.62.2-2.el7.ppc64le.rpm
    sha256: ae38a339a176939b0bd8f48078728aa91ad997a0262b362a4a3b72ddf6549400
    no_hoist: true
    folder: binary
  # - url: https://vault.centos.org/altarch/7.9.2009/os/Source/SPackages/libsoup-2.62.2-2.el7.src.rpm
  #   no_hoist: true
  #   folder: source

build:
  number: {{ cdt_build_number|int + 1000 }}
  noarch: generic
  binary_relocation: false
  detect_binary_files_with_prefix: false
  missing_dso_whitelist:
    - '*'
  # this skip is here because we need different package hashes per distro.
  # we therefore list all possible values in CBC and skip those we don't want;
  # use in a selector ensures that the `distro` variable shows up in the hash
  skip: true  # [distro != "centos7"]

requirements:
  build:
    - glib-networking-conda-ppc64le >=2.38.0 *_{{ cdt_build_number|int + 1000 }}
    - glib2-conda-ppc64le >=2.38.0 *_{{ cdt_build_number|int + 1000 }}
  host:
    - glib-networking-conda-ppc64le >=2.38.0 *_{{ cdt_build_number|int + 1000 }}
    - glib2-conda-ppc64le >=2.38.0 *_{{ cdt_build_number|int + 1000 }}
    - sysroot_linux-ppc64le 2.17.*
  run:
    - glib-networking-conda-ppc64le >=2.38.0 *_{{ cdt_build_number|int + 1000 }}
    - glib2-conda-ppc64le >=2.38.0 *_{{ cdt_build_number|int + 1000 }}
    - sysroot_linux-ppc64le 2.17.*

test:
  commands:
    - echo "it installs!"

about:
  home: https://wiki.gnome.org/Projects/libsoup
  license: LGPLv2
  license_family: LGPL
  license_file: libsoup-license
  summary: (CDT) Soup, an HTTP library implementation
  description: |
    Libsoup is an HTTP library implementation in C. It was originally part of a
    SOAP (Simple Object Access Protocol) implementation called Soup, but the SOAP
    and non-SOAP parts have now been split into separate packages.  libsoup uses
    the Glib main loop and is designed to work well with GTK applications. This
    enables GNOME applications to access HTTP servers on the network in a
    completely asynchronous fashion, very similar to the Gtk+ programming model (a
    synchronous operation mode is also supported for those who want it).

extra:
  recipe-maintainers:
    - conda-forge/help-cdts
