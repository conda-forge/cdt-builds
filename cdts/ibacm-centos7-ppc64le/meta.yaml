package:
  name: ibacm-conda-ppc64le
  version: 22.4

source:
  - url: https://vault.centos.org/altarch/7.9.2009/os/ppc64le/Packages/ibacm-22.4-5.el7.ppc64le.rpm
    sha256: cd7997797d3f64635e58157924d2e5aa996a02a07421ab24c7ce7adf6bdb9a56
    no_hoist: true
    folder: binary
  # - url: https://vault.centos.org/altarch/7.9.2009/os/Source/SPackages/rdma-core-22.4-5.el7.src.rpm
  #   no_hoist: true
  #   folder: source

build:
  number: {{ cdt_build_number|int + 1000 }}
  noarch: generic
  binary_relocation: false
  detect_binary_files_with_prefix: false
  missing_dso_whitelist:
    - '*'
  # this skip is here because we need different package hashes per distro.
  # we therefore list all possible values in CBC and skip those we don't want;
  # use in a selector ensures that the `distro` variable shows up in the hash
  skip: true  # [distro != "centos7"]

requirements:
  build:
    - libibumad-conda-ppc64le ==22.4 *_{{ cdt_build_number|int + 1000 }}
    - libibverbs-conda-ppc64le ==22.4 *_{{ cdt_build_number|int + 1000 }}
    - rdma-core-conda-ppc64le ==22.4 *_{{ cdt_build_number|int + 1000 }}
  host:
    - libibumad-conda-ppc64le ==22.4 *_{{ cdt_build_number|int + 1000 }}
    - libibverbs-conda-ppc64le ==22.4 *_{{ cdt_build_number|int + 1000 }}
    - rdma-core-conda-ppc64le ==22.4 *_{{ cdt_build_number|int + 1000 }}
    - sysroot_linux-ppc64le 2.17.*
  run:
    - libibumad-conda-ppc64le ==22.4 *_{{ cdt_build_number|int + 1000 }}
    - libibverbs-conda-ppc64le ==22.4 *_{{ cdt_build_number|int + 1000 }}
    - rdma-core-conda-ppc64le ==22.4 *_{{ cdt_build_number|int + 1000 }}
    - sysroot_linux-ppc64le 2.17.*

test:
  commands:
    - echo "it installs!"

about:
  home: https://github.com/linux-rdma/rdma-core
  license: GPLv2 or BSD
  license_family: GPL2
  license_file:
    - COPYING.BSD_FB
    - COPYING.BSD_MIT
    - COPYING.GPL2
    - COPYING.md
  summary: (CDT) InfiniBand Communication Manager Assistant
  description: |
    The ibacm daemon helps reduce the load of managing path record lookups on
    large InfiniBand fabrics by providing a user space implementation of what is
    functionally similar to an ARP cache.  The use of ibacm, when properly
    configured, can reduce the SA packet load of a large IB cluster from O(n^2) to
    O(n).  The ibacm daemon is started and normally runs in the background, user
    applications need not know about this daemon as long as their app uses
    librdmacm to handle connection bring up/tear down.  The librdmacm library
    knows how to talk directly to the ibacm daemon to retrieve data.

extra:
  recipe-maintainers:
    - conda-forge/help-cdts
